import streamlit as st
import pandas as pd
from collections import Counter
import matplotlib.pyplot as plt

st.set_page_config(page_title="AI ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏´‡∏ß‡∏¢", layout="centered")

st.markdown("""
    <style>
    .stApp {
        font-family: 'Sarabun', sans-serif;
        font-size: 18px;
    }
    .block-container {
        padding-top: 2rem;
        padding-bottom: 2rem;
        max-width: 700px;
    }
    button {
        font-size: 16px !important;
    }
    </style>
""", unsafe_allow_html=True)

st.title("üéØ ‡∏£‡∏∞‡∏ö‡∏ö AI ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏´‡∏ß‡∏¢")
st.caption("‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏•‡∏≠‡∏á | ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Windows ‡πÅ‡∏•‡∏∞‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠")

# ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á
if "lotto_data" not in st.session_state:
    st.session_state.lotto_data = []

st.subheader("üìù ‡∏Å‡∏£‡∏≠‡∏Å‡∏ú‡∏•‡∏´‡∏ß‡∏¢‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á")
col1, col2 = st.columns(2)
with col1:
    top3 = st.text_input("‡∏™‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏ö‡∏ô", max_chars=3)
with col2:
    bottom2 = st.text_input("‡∏™‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏•‡πà‡∏≤‡∏á", max_chars=2)

col3, col4 = st.columns(2)
with col3:
    if st.button("‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"):
        if top3.isdigit() and bottom2.isdigit():
            st.session_state.lotto_data.append((top3.zfill(3), bottom2.zfill(2)))
            st.success("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß")
        else:
            st.error("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")

with col4:
    if st.button("üóëÔ∏è ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"):
        st.session_state.lotto_data = []
        st.success("üßπ ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß")

# ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
if st.session_state.lotto_data:
    df = pd.DataFrame(st.session_state.lotto_data, columns=["‡∏™‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏ö‡∏ô", "‡∏™‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏•‡πà‡∏≤‡∏á"])
    st.dataframe(df, use_container_width=True)

    # üîç ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà
    all_digits = "".join([a + b for a, b in st.session_state.lotto_data])
    freq = Counter(all_digits).most_common()

    main_digit = freq[0][0]
    main_pairs = [f"{main_digit}{(int(main_digit)+i)%10}" for i in range(1, 5)]

    # üîÅ ‡πÄ‡∏•‡∏Ç‡πÄ‡∏ö‡∏¥‡πâ‡∏•‡πÅ‡∏•‡∏∞‡∏ã‡πâ‡∏≥
    last_round = st.session_state.lotto_data[-1]
    second_last = st.session_state.lotto_data[-2] if len(st.session_state.lotto_data) >= 2 else None
    repeated = [n for n in last_round if last_round.count(n) > 1]

    st.subheader("üìä ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
    st.markdown(f"**‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å‡∏ö‡πà‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î:** `{main_digit}`")
    st.markdown(f"**‡πÄ‡∏•‡∏Ç‡πÄ‡∏ö‡∏¥‡πâ‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:** {' '.join(repeated) if repeated else '‡πÑ‡∏°‡πà‡∏°‡∏µ'}")
    if second_last:
        match = set(last_round) & set(second_last)
        st.markdown(f"**‡πÄ‡∏•‡∏Ç‡∏ã‡πâ‡∏≥‡∏à‡∏≤‡∏Å‡∏£‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô:** {' '.join(match) if match else '‡πÑ‡∏°‡πà‡∏°‡∏µ'}")

    # üî† ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πâ‡∏ô/‡∏•‡∏á‡∏ó‡πâ‡∏≤‡∏¢
    start_digits = [a[0] for a, _ in st.session_state.lotto_data]
    end_digits = [a[-1] for a, _ in st.session_state.lotto_data]
    start_freq = Counter(start_digits).most_common(1)
    end_freq = Counter(end_digits).most_common(1)

    st.markdown(f"**‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏ö‡πà‡∏≠‡∏¢:** {start_freq[0][0]}  |  **‡∏•‡∏á‡∏ó‡πâ‡∏≤‡∏¢‡∏ö‡πà‡∏≠‡∏¢:** {end_freq[0][0]}")

    # üìà ‡∏Å‡∏£‡∏≤‡∏ü
    st.subheader("üìà ‡∏Å‡∏£‡∏≤‡∏ü‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç")
    fig, ax = plt.subplots()
    ax.bar(dict(freq).keys(), dict(freq).values(), color="skyblue")
    ax.set_xlabel("‡πÄ‡∏•‡∏Ç")
    ax.set_ylabel("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
    st.pyplot(fig)

    # üîÆ ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏£‡∏≠‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
    if st.button("üß† ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏£‡∏≠‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ"):
        st.markdown("### üîÆ ‡∏ú‡∏•‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏£‡∏≠‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ:")
        st.success(f"‡πÄ‡∏•‡∏Ç‡πÄ‡∏î‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î: `{main_digit}`")
        st.info(f"‡∏ä‡∏∏‡∏î‡πÄ‡∏•‡∏Ç‡∏™‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: `{', '.join(main_pairs)}`")

    # üì§ ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    csv = df.to_csv(index=False).encode("utf-8-sig")
    st.download_button("üì• ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏õ‡πá‡∏ô .CSV", data=csv, file_name="lotto_history.csv", mime="text/csv")
else:
    st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ú‡∏•‡∏´‡∏ß‡∏¢‡∏Å‡πà‡∏≠‡∏ô")

st.markdown("---")
st.markdown("üß† ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏î‡∏¢ **Phatarit AI Lab**")
